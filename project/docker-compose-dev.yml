version: "3.8"
services:
  anti-fraud-analyzer:
    build:
      context: ./main/anti-fraud-analyzer
      dockerfile: ./Dockerfile
      target: development
    restart: always
    command: npm run start:dev
    ports:
      - 6801:3000
    environment:
      - APP_PORT=3000
    volumes:
      - ./main/anti-fraud-analyzer:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - start-stop-database
      - kafka-event-bus
    networks:
      - smartcity-al-b-network-dev

  billing-handler:
    build:
      context: ./main/billing-handler
      dockerfile: ./Dockerfile
      target: development
    restart: always
    command: npm run start:dev
    ports:
      - 6802:3000
    environment:
      - APP_PORT=3000
    volumes:
      - ./main/billing-handler:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - bills-database
    networks:
      - smartcity-al-b-network-dev

  car-tracker:
    build:
      context: ./main/car-tracker
      dockerfile: ./Dockerfile
      target: development
    restart: always
    command: npm run start:dev
    ports:
      - 6803:3000
    environment:
      - URL_ZONES_POLLUTION=http://zones-pollution-extern:3000
      - APP_PORT=3000
    volumes:
      - ./main/car-tracker:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - tracking-infos-database
      - tracking-shutdown-queue
      - kafka-event-bus
    networks:
      - smartcity-al-b-network-dev

  client-communication-service:
    build:
      context: ./main/client-communication-service
      dockerfile: ./Dockerfile
      target: development
    restart: always
    command: npm run start:dev
    ports:
      - 6804:3000
    environment:
      - APP_PORT=3000
    depends_on:
      - redis
    volumes:
      - ./main/client-communication-service:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - smartcity-al-b-network-dev

  route-advisor:
    build:
      context: ./main/route-advisor
      dockerfile: ./Dockerfile
      target: development
    restart: always
    command: npm run start:dev
    ports:
      - 6805:3000
    environment:
      - APP_PORT=3000
    volumes:
      - ./main/route-advisor:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - kafka-event-bus
    networks:
      - smartcity-al-b-network-dev

  tracking-analytics:
    build:
      context: ./main/tracking-analytics
      dockerfile: ./Dockerfile
      target: development
    restart: always
    command: npm run start:dev
    ports:
      - 6806:3000
    environment:
      - APP_PORT=3000
    volumes:
      - ./main/tracking-analytics:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - car-statistics-database
    networks:
      - smartcity-al-b-network-dev

  tracking-shutdown:
    build:
      context: ./main/tracking-shutdown
      dockerfile: ./Dockerfile
      target: development
    restart: always
    command: npm run start:dev
    ports:
      - 6807:3000
    environment:
      - APP_PORT=3000
    volumes:
      - ./main/tracking-shutdown:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - tracking-infos-database
      - tracking-shutdown-queue
    networks:
      - smartcity-al-b-network-dev

  user-configurator:
    build:
      context: ./main/user-configurator
      dockerfile: ./Dockerfile
      target: development
    restart: always
    command: npm run start:dev
    ports:
      - 6808:3000
    environment:
      - APP_PORT=3000
    volumes:
      - ./main/user-configurator:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - kafka-event-bus
    networks:
      - smartcity-al-b-network-dev

  user-position-proxy:
    build:
      context: ./main/user-position-proxy
      dockerfile: ./Dockerfile
      target: development
    restart: always
    command: npm run start:dev
    ports:
      - 6809:3000
    environment:
      - APP_PORT=3000
    volumes:
      - ./main/user-position-proxy:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - kafka-event-bus
    networks:
      - smartcity-al-b-network-dev

  camera-checker:
    build:
      context: ./mocks/camera-checker
      dockerfile: ./Dockerfile
      target: development
    restart: always
    command: npm run start:dev
    ports:
      - 6810:3000
    environment:
      - APP_PORT=3000
    volumes:
      - ./mocks/camera-checker:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - smartcity-al-b-network-dev

  zones-pollution-extern:
    build:
      context: ./mocks/zones-pollution-extern
      dockerfile: ./Dockerfile
      target: development
    restart: always
    command: npm run start:dev
    ports:
      - 6811:3000
    environment:
      - APP_PORT=3000
    volumes:
      - ./mocks/zones-pollution-extern:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - smartcity-al-b-network-dev


  tracking-infos-database:
    image: "mongo:6.0"
    restart: always
    ports:
      - '27020:27017'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    volumes:
      - './docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/'
      - './monitoring/data/tracking-infos-database:/data/db'
    networks:
      - smartcity-al-b-network-dev

  tracking-infos-database-exporter:
    restart: 'always'
    ports:
      - '9216:9216'
    image: 'percona/mongodb_exporter:0.35'
    environment:
      - MONGODB_URI=mongodb://exporter:password@tracking-infos-database:27017
      - EXTRA_OPTS="--web.telemetry-prefix=tracking_infos_database_"
#    command:
#      - '--mongodb.uri=mongodb://exporter:password@tracking-infos-database:27017 --web.telemetry-prefix=tracking_infos_database'
    depends_on:
      - tracking-infos-database
    networks:
      - smartcity-al-b-network-dev

  car-statistics-database:
    image: "mongo:6.0"
    restart: always
    ports:
      - '27021:27017'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    volumes:
      - './docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/'
      - './monitoring/data/car-statistics-database:/data/db'
    networks:
      - smartcity-al-b-network-dev

  car-statistics-database-exporter:
    restart: 'always'
    ports:
      - '9217:9216'
    image: 'percona/mongodb_exporter:0.35'
    environment:
      - MONGODB_URI=mongodb://exporter:password@car-statistics-database:27017
      - EXTRA_OPTS="--web.telemetry-prefix=car_statistics_database_"
#    command:
#      - '--mongodb.uri=mongodb://exporter:password@car-statistics-database:27017 --web.telemetry-prefix=car_statistics_database'
    depends_on:
      - car-statistics-database
    networks:
      - smartcity-al-b-network-dev

  bills-database:
    image: "mongo:6.0"
    restart: always
    ports:
      - '27022:27017'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    volumes:
      - './docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/'
      - './monitoring/data/bills-database:/data/db'
    networks:
      - smartcity-al-b-network-dev

  bills-database-exporter:
    restart: 'always'
    ports:
      - '9218:9216'
    image: 'percona/mongodb_exporter:0.35'
    environment:
      - MONGODB_URI=mongodb://exporter:password@bills-database:27017
      - EXTRA_OPTS="--web.telemetry-prefix=bills_database_"
#    command:
#      - '--mongodb.uri=mongodb://exporter:password@bills-database:27017 --web.telemetry-prefix=bills_database'
    depends_on:
      - bills-database
    networks:
      - smartcity-al-b-network-dev

  start-stop-database:
    image: "mongo:6.0"
    restart: always
    ports:
      - '27023:27017'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    volumes:
      - './docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/'
      - './monitoring/data/start-stop-database:/data/db'
    networks:
      - smartcity-al-b-network-dev

  start-stop-database-exporter:
    restart: 'always'
    ports:
      - '9219:9216'
    image: 'percona/mongodb_exporter:0.35'
    environment:
      - MONGODB_URI=mongodb://exporter:password@start-stop-database:27017
      - EXTRA_OPTS="--web.telemetry-prefix=start_stop_database_"
#    command:
#      - '--mongodb.uri=mongodb://exporter:password@start-stop-database:27017 --web.telemetry-prefix=start_stop_database'
    depends_on:
      - start-stop-database
    networks:
      - smartcity-al-b-network-dev

  redis:
    image: "redis:alpine"
    ports:
      - '6379:6379'
    networks:
      - smartcity-al-b-network-dev


  tracking-shutdown-queue:
    image: 'rabbitmq:3-management'
    container_name: car-tracker-bus
    environment:
      RABBITMQ_DEFAULT_USER: "admin"
      RABBITMQ_DEFAULT_PASS: "admin"
    ports:
      - 5672:5672
      - 15692:15692
    networks:
      - smartcity-al-b-network-dev

  zookeeper:
    container_name: smart-city-dev-zookeeper
    restart: unless-stopped
    image: 'wurstmeister/zookeeper'
    environment:
      zk_id: "1"
    expose:
      - 2181
    networks:
      - smartcity-al-b-network-dev

  kafka-event-bus:
    # container_name: soa-team-e-kafka
    restart: unless-stopped
    image: 'wurstmeister/kafka'
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka-event-bus
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: smart-city-dev-zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_BROKER_ID: 1
      KAFKA_CREATE_TOPICS: "topic-poll:1:1,topic-poll-response:1:1,topic-rocket-event:1:1,topic-launch-event:1:1,topic-launch-order:1:1"
    expose:
      - 9092
    networks:
      - smartcity-al-b-network-dev

  alertmanager:
    container_name: alertmanager
    hostname: alertmanager
    image: prom/alertmanager
    user: "$UID:$GID"
    volumes:
      - ./monitoring/alertmanager.conf:/etc/alertmanager/alertmanager.conf
    command:
      - '--config.file=/etc/alertmanager/alertmanager.conf'
    ports:
      - 9093:9093
    networks:
      - smartcity-al-b-network-dev

  prometheus:
    container_name: prometheus
    hostname: prometheus
    image: prom/prometheus
    user: "$UID:$GID"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/alert_rules.yml:/etc/prometheus/alert_rules.yml
      - ./monitoring/prometheus_volume:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    links:
      - alertmanager:alertmanager
    ports:
      - 9090:9090
    networks:
      - smartcity-al-b-network-dev

  grafana:
    container_name: grafana
    hostname: grafana
    image: grafana/grafana
    user: "$UID:$GID"
    volumes:
      - ./monitoring/grafana_datasources.yml:/etc/grafana/provisioning/datasources/all.yaml
      - ./monitoring/grafana_config.ini:/etc/grafana/config.ini
      - ./monitoring/grafana_volume:/var/lib/grafana
    ports:
      - 3000:3000
    networks:
      - smartcity-al-b-network-dev

networks:
  smartcity-al-b-network-dev:
    driver: bridge
